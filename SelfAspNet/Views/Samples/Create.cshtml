@model SelfAspNet.Models.Sample

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Sample</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        @* <form asp-action="Create">について *@
        @* 結果：<form action="/Samples/Create" method="post" novalidate="novalidate"> *@
        @* actionについて：コントローラーからSamplesを特定、asp-action="Create"でアクションをcreateに指定 *@
        @* method：デフォはPost。指定も可能(method="get")*@
        @* novalidate：フォーム送信時のHTML5によるブラウザ検証を無効化する。使いたいときは色々あるが、手動でformを作成するのがよさそう。詳細は後で *@
        <form asp-action="Create" novalidate="false">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                @* label asp-forとinput asp-for *@
                @* これでlabelとinputのforとidを紐づけた形で生成される *@
                @* inputのtypeもモデルのプロパティの型に応じて最適な type が選択され自動で決まる *@
                @* inputのtypeを手動で制御したいときはモデルでアノテーションもあるがややこしいので、手書きでform書くのがいいかも *@
                <label asp-for="title" class="control-label"></label>
                <input asp-for="title" class="form-control" />
                <span asp-validation-for="title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="sub_title" class="control-label"></label>
                <input asp-for="sub_title" class="form-control" />
                <span asp-validation-for="sub_title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
